log_level: debug

sinker:
  resync_period: 3m
  max_prowjob_age: 100h
  max_pod_age: 10h

presets:
# credential presets
- labels:
    preset-k8s-ssh: "true"
  env:
  - name: USER
    value: prow
  - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
    value: /etc/ssh-key-secret/ssh-private
  - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
    value: /etc/ssh-key-secret/ssh-public
  volumes:
  - name: ssh
    secret:
      defaultMode: 0400
      secretName: ssh-key-secret
  volumeMounts:
  - name: ssh
    mountPath: /etc/ssh-key-secret
    readOnly: true
- labels:
    preset-service-account: "true"
  env:
  - name: GOOGLE_APPLICATION_CREDENTIALS
    value: /etc/service-account/service-account.json
  volumes:
  - name: service
    secret:
      secretName: service-account
  volumeMounts:
  - name: service
    mountPath: /etc/service-account
    readOnly: true
- labels:
    preset-azure-creds: "true"
  env:
  - name: AZURE_CREDENTIALS
    value: /etc/azure-cred/credentials
  volumes:
  - name: azure-cred
    secret:
      secretName: azure-cred
  volumeMounts:
  - name: azure-cred
    mountPath: /etc/azure-cred
    readOnly: true
- labels:
    preset-azure-creds-upstream: "true"
  env:
  - name: AZURE_CREDENTIALS
    value: /etc/azure-cred/credentials
  volumes:
  - name: azure-cred
    secret:
      secretName: azure-cred-upstream
  volumeMounts:
  - name: azure-cred
    mountPath: /etc/azure-cred
    readOnly: true
- labels:
    preset-azure-ssh: "true"
  env:
  - name: AZURE_SSH_PUBLIC_KEY_FILE
    value: /etc/azure-ssh/azure-ssh.pub
  - name: CLOUD_CONFIG
    value: random
  - name: AZ_STORAGE_CONTAINER_NAME
    value: mystoragecontainer
  - name: REGISTRY
    value: atvreg.azurecr.io
  - name: WIN_BUILD
#    value: https://raw.githubusercontent.com/adelina-t/acs-engine/change_gen_script_for_e2e/scripts/build-windows-k8s.sh
    value: https://raw.githubusercontent.com/kubernetes-sigs/windows-testing/master/build/build-windows-k8s.sh
  volumes:
  - name: docker-pass
    secret:
      secretName: docker-pass
      defaultMode: 256
  - name: azure-ssh
    secret:
      secretName: azure-ssh
      defaultMode: 256
  volumeMounts:
  - name: azure-ssh
    mountPath: /etc/azure-ssh
    readOnly: true
  - name: docker-pass
    mountPath: /etc/ci
    readOnly: true
- labels:
    preset-repo-list: "true"
  env:
  - name: KUBE_TEST_REPO_LIST_DOWNLOAD_LOCATION
    value: https://raw.githubusercontent.com/kubernetes-sigs/windows-testing/master/images/image-repo-list
- labels:
    preset-azure-storage: "true"
  env:
  - name: AZ_STORAGE_KEY
    valueFrom:
      secretKeyRef:
        name: azure-storage
        key: az_storage_key
  - name: AZ_STORAGE_ACCOUNT
    valueFrom:
      secretKeyRef:
        name: azure-storage
        key: az_storage_account
- labels:
    preset-acs-creds: "true"
  env:
  - name: ACS_USER
    valueFrom:
      secretKeyRef:
        name: acs-creds
        key: username
  - name: ACS_PASSWORD
    valueFrom:
      secretKeyRef:
        name: acs-creds
        key: password
- labels:
    preset-kube-config: "true"
  volumes:
  - name: kube-conf
    secret:
      secretName: kube-conf
  volumeMounts:
  - name: kube-conf
    mountPath: /root/.kube/
    readOnly: true
- labels:
    preset-kube-config: "true"
  volumes:
  - name: kube-conf
    secret:
      secretName: kube-conf
  volumeMounts:
  - name: kube-conf
    mountPath: /root/.kube/
    readOnly: true

postsubmits:
  e2e-win/e2e-win-prow-deployment:
  - name: update-config
    agent: kubernetes
    branches:
    - master
    - papagalu-test
    labels:
      preset-kube-config: "true"
    spec:
      containers:
      - image: gcr.io/win-e2e-test/update-config

periodics:
- interval: 2000h
  name: pull-kubernetes-build-cni-par-1-18
  agent: kubernetes
  context: pull-kubernetes-test-hyperkube
  labels:
    preset-service-account: "true"
    preset-azure-creds: "true"
    preset-azure-ssh: "true"
    preset-azure-storage: "true"
    preset-repo-list: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20190315-49d62eb51-master #gcr.io/k8s-testimages/kubekins-e2e:v20190219-93b67c55b-master
      args:
      - "--job=$(JOB_NAME)"
      - "--root=/go/src"
      - "--repo=k8s.io/kubernetes=master"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://win-e2e-test/pr-logs"
      - "--timeout=900"
      - "--scenario=kubernetes_e2e"
      - "--" # end bootstrap args, scenario args below
      - "--deployment=acsengine"
      - "--provider=skeleton"
      - "--test=true"
      - "--up=true"
      - "--down=false"
      - "--extract=ci/latest"
      - "--acsengine-admin-password=Passw0rdAdmin"
      - "--acsengine-admin-username=azureuser"
      - "--acsengine-resource-name=prow-${PROW_JOB_ID}"
      - "--acsengine-resourcegroup-name=${JOB_NAME}-${PROW_JOB_ID}"
      - "--acsengine-creds=$AZURE_CREDENTIALS"
      - "--acsengine-download-url=https://github.com/Azure/aks-engine/releases/download/v0.34.0/aks-engine-v0.34.0-linux-amd64.tar.gz"
      - "--acsengine-public-key=$AZURE_SSH_PUBLIC_KEY_FILE"
      - "--acsengine-winZipBuildScript=$WIN_BUILD"
      - "--acsengine-orchestratorRelease=1.14"
      - "--ginkgo-parallel=8"
      - "--acsengine-template-url=https://raw.githubusercontent.com/adelina-t/windows-testing/custom-template/job-templates/kubernetes_release_staging.json"
      - "--acsengine-agentpoolcount=2"
      - "--test_args=--ginkgo.flakeAttempts=2 --num-nodes=2 --node-os-distro=windows --ginkgo.focus=\\[Conformance\\]|\\[NodeConformance\\]|\\[sig-windows\\]|\\[sig-apps\\].CronJob|\\[sig-api-machinery\\].ResourceQuota|\\[sig-scheduling\\].SchedulerPreemption --ginkgo.skip=\\[LinuxOnly\\]|GMSA|\\[Serial\\]"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
        # docker-in-docker needs privileged mode
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      securityContext:
        privileged: true
    volumes:
      - name: docker-graph
        emptyDir: {}

- interval: 2000h
  name: pull-kubernetes-latest-aks-up-down2
  agent: kubernetes
  context: pull-kubernetes-test-hyperkube
  labels:
    preset-service-account: "true"
    preset-azure-creds: "true"
    preset-azure-ssh: "true"
    preset-azure-storage: "true"
    preset-repo-list: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20190329-811f7954b-master #gcr.io/k8s-testimages/kubekins-e2e:v20190219-93b67c55b-master
      args:
      - "--job=$(JOB_NAME)"
      - "--root=/go/src"
      - "--repo=k8s.io/kubernetes=master"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://win-e2e-test/pr-logs"
      - "--timeout=600"
      - "--scenario=kubernetes_e2e"
      - "--" # end bootstrap args, scenario args below
      - "--deployment=acsengine"
      - "--provider=skeleton"
      - "--test=false"
      - "--up=true"
      - "--down=false"
      - "--extract=ci/latest"
      - "--ginkgo-parallel=8"
      - "--acsengine-admin-password=Passw0rdAdmin"
      - "--acsengine-admin-username=azureuser"
      - "--acsengine-resource-name=prow-${PROW_JOB_ID}"
      - "--acsengine-resourcegroup-name=${JOB_NAME}-${PROW_JOB_ID}"
      - "--acsengine-creds=$AZURE_CREDENTIALS"
      - "--acsengine-download-url=https://github.com/Azure/aks-engine/releases/download/v0.34.0/aks-engine-v0.34.0-linux-amd64.tar.gz"
      - "--acsengine-public-key=$AZURE_SSH_PUBLIC_KEY_FILE"
      - "--acsengine-winZipBuildScript=$WIN_BUILD"
      - "--acsengine-orchestratorRelease=1.14"
      - "--acsengine-template-url=https://raw.githubusercontent.com/adelina-t/windows-testing/update-testing-template/job-templates/kubernetes_release_staging.json"
      - "--acsengine-agentpoolcount=2"
      - "--test_args=--ginkgo.flakeAttempts=2 --num-nodes=2 --node-os-distro=windows --ginkgo.focus=\\[Conformance\\]|\\[NodeConformance\\]|\\[sig-windows\\]|\\[sig-apps\\].CronJob|\\[sig-api-machinery\\].ResourceQuota|\\[sig-scheduling\\].SchedulerPreemption --ginkgo.skip=\\[LinuxOnly\\]|GMSA|\\[Serial\\]"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
        # docker-in-docker needs privileged mode
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      securityContext:
        privileged: true
    volumes:
      - name: docker-graph
        emptyDir: {}

- interval: 2000h
  name: ci-test-log-collection1
  agent: kubernetes
  context: pull-kubernetes-test-hyperkube
  labels:
    preset-service-account: "true"
    preset-azure-creds: "true"
    preset-azure-ssh: "true"
    preset-azure-storage: "true"
    preset-repo-list: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: e2eteam/custom-kubekins:v20190402-ea8bb49-dirty-master #gcr.io/k8s-testimages/kubekins-e2e:v20190219-93b67c55b-master
      args:
      - "--job=$(JOB_NAME)"
      - "--root=/go/src"
      - "--repo=k8s.io/kubernetes=master"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://win-e2e-test/pr-logs"
      - "--timeout=600"
      - "--scenario=kubernetes_e2e"
      - "--" # end bootstrap args, scenario args below
      - "--deployment=acsengine"
      - "--provider=skeleton"
      - "--test=false"
      - "--up=true"
      - "--down=false"
      - "--extract=ci/latest"
      - "--ginkgo-parallel=8"
      - "--acsengine-admin-password=Passw0rdAdmin"
      - "--acsengine-admin-username=azureuser"
      - "--acsengine-resource-name=prow-${PROW_JOB_ID}"
      - "--acsengine-resourcegroup-name=${JOB_NAME}-${PROW_JOB_ID}"
      - "--acsengine-creds=$AZURE_CREDENTIALS"
      - "--acsengine-download-url=https://github.com/Azure/aks-engine/releases/download/v0.33.2/aks-engine-v0.33.2-linux-amd64.tar.gz"
      - "--acsengine-public-key=$AZURE_SSH_PUBLIC_KEY_FILE"
      - "--acsengine-winZipBuildScript=$WIN_BUILD"
      - "--acsengine-orchestratorRelease=1.14"
      - "--acsengine-template-url=https://raw.githubusercontent.com/kubernetes-sigs/windows-testing/master/job-templates/kubernetes_release_staging.json"
      - "--acsengine-agentpoolcount=2"
      - "--test_args=--ginkgo.flakeAttempts=2 --num-nodes=2 --node-os-distro=windows --ginkgo.focus=\\[Conformance\\]|\\[NodeConformance\\]|\\[sig-windows\\]|\\[sig-apps\\].CronJob|\\[sig-api-machinery\\].ResourceQuota|\\[sig-scheduling\\].SchedulerPreemption --ginkgo.skip=\\[LinuxOnly\\]|GMSA|\\[Serial\\]"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
        # docker-in-docker needs privileged mode
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      securityContext:
        privileged: true
    volumes:
      - name: docker-graph
        emptyDir: {}

tide:
  merge_method:
    e2e-win/test-infra: squash
    e2e-win/e2e-win-prow-deployment: squash
  queries:
  - repos:
    - e2e-win/test-infra
    - e2e-win/e2e-win-prow-deployment
    labels:
    - lgtm
    - approved
    missingLabels:
    - needs-ok-to-test
    - DO-NOT-MERGE
    - do-not-merge/work-in-progress
    - do-not-merge/hold
