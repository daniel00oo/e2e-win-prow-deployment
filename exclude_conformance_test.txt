[k8s.io] KubeletManagedEtcHosts  should test kubelet managed /etc/hosts file [NodeConformance] [Conformance]

[k8s.io] PrivilegedPod [NodeConformance]  should enable privileged commands

[sig-storage] ConfigMap  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
[sig-storage] ConfigMap  should be consumable from pods in volume with defaultMode set [NodeConformance] [Conformance]
[sig-storage] ConfigMap  should be consumable from pods in volume with mappings and Item mode set [NodeConformance] [Conformance]
[sig-storage] ConfigMap  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]

[sig-storage] Secrets  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [NodeConformance] [Conformance]
[sig-storage] Secrets  should be consumable from pods in volume with defaultMode set [NodeConformance] [Conformance]
[sig-storage] Secrets  should be consumable from pods in volume with mappings and Item Mode set [NodeConformance] [Conformance]

[sig-storage] Projected configMap  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
[sig-storage] Projected secret  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [NodeConformance] [Conformance]
[sig-storage] Projected configMap  should be consumable from pods in volume with defaultMode set [NodeConformance] [Conformance]
[sig-storage] Projected secret  should be consumable from pods in volume with defaultMode set [NodeConformance] [Conformance]
[sig-storage] Projected configMap  should be consumable from pods in volume with mappings and Item mode set [NodeConformance] [Conformance]
[sig-storage] Projected secret  should be consumable from pods in volume with mappings and Item Mode set [NodeConformance] [Conformance]
[sig-storage] Projected configMap  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
[sig-storage] Projected downwardAPI  should set DefaultMode on files [NodeConformance] [Conformance]
[sig-storage] Projected downwardAPI  should set mode on item file [NodeConformance] [Conformance]

[sig-storage] Downward API volume  should set DefaultMode on files [NodeConformance] [Conformance]
[sig-storage] Downward API volume  should set mode on item file [NodeConformance] [Conformance]

[sig-storage] EmptyDir volumes  should support (non-root,0644,default) [NodeConformance] [Conformance]
[sig-storage] EmptyDir volumes  should support (non-root,0644,tmpfs) [NodeConformance] [Conformance]
[sig-storage] EmptyDir volumes  should support (non-root,0666,default) [NodeConformance] [Conformance]
[sig-storage] EmptyDir volumes  should support (non-root,0666,tmpfs) [NodeConformance] [Conformance]
[sig-storage] EmptyDir volumes  should support (non-root,0777,default) [NodeConformance] [Conformance]
[sig-storage] EmptyDir volumes  should support (non-root,0777,tmpfs) [NodeConformance] [Conformance]
[sig-storage] EmptyDir volumes  should support (root,0644,default) [NodeConformance] [Conformance]
[sig-storage] EmptyDir volumes  should support (root,0644,tmpfs) [NodeConformance] [Conformance]
[sig-storage] EmptyDir volumes  should support (root,0666,default) [NodeConformance] [Conformance]
[sig-storage] EmptyDir volumes  should support (root,0666,tmpfs) [NodeConformance] [Conformance]
[sig-storage] EmptyDir volumes  should support (root,0777,default) [NodeConformance] [Conformance]
[sig-storage] EmptyDir volumes  should support (root,0777,tmpfs) [NodeConformance] [Conformance]
[sig-storage] EmptyDir volumes  volume on default medium should have the correct mode [NodeConformance] [Conformance]
[sig-storage] EmptyDir volumes  volume on tmpfs should have the correct mode [NodeConformance] [Conformance]

[sig-storage] HostPath  should give a volume the correct mode [NodeConformance] [Conformance]

[sig-storage] Subpath Atomic writer volumes  should support subpaths with configmap pod with mountPath of existing file [Conformance]
[sig-storage] Subpath Atomic writer volumes  should support subpaths with projected pod [Conformance]
[sig-storage] Subpath Atomic writer volumes  should support subpaths with secret pod [Conformance]
[sig-storage] Subpath Atomic writer volumes  should support subpaths with configmap pod [Conformance]
[sig-storage] Subpath Atomic writer volumes  should support subpaths with downward pod [Conformance]

[k8s.io] Container Runtime blackbox test when running a container with a new image  should be able to pull from private registry with secret [NodeConformance]
[k8s.io] Container Runtime blackbox test when running a container with a new image  should be able to pull image from docker hub [NodeConformance]
[k8s.io] Container Runtime blackbox test when running a container with a new image  should be able to pull image from gcr.io [NodeConformance]
[k8s.io] Container Runtime blackbox test when starting a container that exits  should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogOnError is set [NodeConformance]
[k8s.io] Container Runtime blackbox test when starting a container that exits  should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogOnError is set [NodeConformance]
[k8s.io] Container Runtime blackbox test when starting a container that exits  should report termination message from log output if TerminationMessagePolicy FallbackToLogOnError is set [NodeConformance]
[k8s.io] Container Runtime blackbox test when starting a container that exits  should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance]
[k8s.io] Container Runtime blackbox test when starting a container that exits  should report termination message if TerminationMessagePath is set [NodeConformance]

[k8s.io] Security Context When creating a container with runAsUser  should run the container with uid 0 [NodeConformance]
[k8s.io] Security Context When creating a container with runAsUser  should run the container with uid 65534 [NodeConformance]
[k8s.io] Security Context When creating a pod with privileged  should run the container as unprivileged when false [NodeConformance]
[k8s.io] Security Context When creating a pod with readOnlyRootFilesystem  should run the container with readonly rootfs when readOnlyRootFilesystem=true [NodeConformance]
[k8s.io] Security Context When creating a pod with readOnlyRootFilesystem  should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance]
[k8s.io] Security Context when creating containers with AllowPrivilegeEscalation  should allow privilege escalation when not explicitly set and uid != 0 [NodeConformance]
[k8s.io] Security Context when creating containers with AllowPrivilegeEscalation  should allow privilege escalation when true [NodeConformance]
[k8s.io] Security Context when creating containers with AllowPrivilegeEscalation  should not allow privilege escalation when false [NodeConformance]

[k8s.io] Kubelet when scheduling a busybox Pod with hostAliases  should write entries to /etc/hosts [NodeConformance] [Conformance]
[k8s.io] Kubelet when scheduling a read only busybox container  should not write to root filesystem [NodeConformance] [Conformance]
